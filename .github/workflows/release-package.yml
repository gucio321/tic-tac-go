name: release-packages

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go 1.16
        uses: actions/setup-go@v3
        with:
          go-version: 1.16
          id: go

      - name: Install dependencies
        run: |
          sudo apt-get --allow-releaseinfo-change update
          sudo apt-get install -y libgtk-3-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libgl1-mesa-dev libsdl2-dev libasound2-dev > /dev/null 2>&1
          sudo apt-get install -y xvfb
          sudo apt-get install -y appstream
          sudo apt-get install -y mingw-w64
          wget "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
          chmod a+x appimagetool-x86_64.AppImage


      - name: setup go packages
        run: make setup
      - name: Build .bin package
        run: |
          make build

      - name: create ouput dir
        run: |
          mkdir build/tic-tac-go-terminal.AppDir
          mkdir build/tic-tac-go-windowed.AppDir

      - name: download icon
        run: |
          wget https://cdn4.iconfinder.com/data/icons/core-ui-outlined/32/outlined_placeholder-512.png -o build/tic-tac-go-terminal.AppDir/icon.png
          wget https://cdn4.iconfinder.com/data/icons/core-ui-outlined/32/outlined_placeholder-512.png -o build/tic-tac-go-windowed.AppDir/icon.png

      - name: build go package
        run: |
          cp build/tic-tac-go-terminal.bin build/tic-tac-go-terminal.AppDir/main.bin 
          cp build/tic-tac-go-windowed.bin build/tic-tac-go-windowed.AppDir/main.bin 

      - name: create .desktop entry
        run: |
          echo -e "[Desktop Entry]\n
          Type=Application\n
          Name=tic-tac-go\n
          Icon=icon
          NoDisplay=false\n
          StartupNotify=true\n
          Categories=Game;\n" >> build/tic-tac-go-terminal.AppDir/Desktop.desktop

          echo -e "[Desktop Entry]\n
          Type=Application\n
          Name=tic-tac-go\n
          Icon=icon
          NoDisplay=false\n
          StartupNotify=true\n
          Categories=Game;\n" >> build/tic-tac-go-windowed.AppDir/Desktop.desktop

      - name: create AppRun
        run: |
          echo -e "#!/bin/sh
          cd \"\$(dirname \"\$0\")\"
          exec ./main.bin">> build/tic-tac-go-terminal.AppDir/AppRun
          echo -e "#!/bin/sh
          cd \"\$(dirname \"\$0\")\"
          exec ./main.bin">> build/tic-tac-go-windowed.AppDir/AppRun
          chmod 755 build/tic-tac-go-terminal.AppDir/AppRun
          chmod 755 build/tic-tac-go-windowed.AppDir/AppRun

      - name: building AppImage
        run: |
          ./appimagetool-x86_64.AppImage build/tic-tac-go-terminal.AppDir build/tic-tac-go-terminal.AppImage
          ./appimagetool-x86_64.AppImage build/tic-tac-go-windowed.AppDir build/tic-tac-go-windowed.AppImage

      # extract tag name from github ref
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Echo
        run: echo ${{ env.RELEASE_VERSION }}

      - uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          automatic_release_tag: ${{ env.RELEASE_VERSION }}
          files: |
            build/tic-tac-go-terminal.bin
            build/tic-tac-go-terminal.AppImage
            build/tic-tac-go-terminal.exe
            build/tic-tac-go-windowed.bin
            build/tic-tac-go-windowed.AppImage
            build/tic-tac-go-windowed.exe
